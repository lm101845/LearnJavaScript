/**
 * @Author liming
 * @Date 2024/5/31 9:53
 **/

/**
 * 如果数学运算的操作数不是数字类型（或者无法解析为常规的十进制或十六进制数字），
 * 就无法返回一个有效的数字，这种情况下返回值为 NaN 。
 * NaN 意指“不是一个数字”（not a number），这个名字容易引起误会，后面将会提到。将它
 * 理解为“无效数值”“失败数值”或者“坏数值”可能更准确些。
 * 例如：
 */

var a = 2 / "foo"; // NaN
typeof a === "number"; // true

/**
 * 换句话说，“不是数字的数字”仍然是数字类型。这种说法可能有点绕。
 * NaN 是一个“警戒值”（sentinel value，有特殊用途的常规值），用于指出数字类型中的错误
 * 情况，即“执行数学运算没有成功，这是失败后返回的结果”。
 * 有人也许认为如果要检查变量的值是否为 NaN ，可以直接和 NaN 进行比较，就像比较 null
 * 和 undefined 那样。实则不然。
 * var a = 2 / "foo";
 * a == NaN; // false
 * a === NaN; // false
 * NaN 是一个特殊值，它和自身不相等，是唯一一个非自反（自反，reflexive，即 x === x 不
 * 成立）的值。而 NaN != NaN 为 true ，很奇怪吧？
 */

