/**
 * @Author liming
 * @Date 2024/5/31 10:06
 **/

var a = 2;
var b = a; // b是a的值的一个副本
b++;
console.log(a); // 2
console.log(b); // 3
var c = [1,2,3];
var d = c; // d是[1,2,3]的一个引用
d.push( 4 );
console.log(c); // [1,2,3,4]
console.log(d); // [1,2,3,4]

/**
 * c 和 d 则分别指向同一个复合值 [1,2,3] 的两个不同引用。请注意， c 和 d 仅仅是指向值
 * [1,2,3] ，并非持有。所以它们更改的是同一个值（如调用 .push(4) ），随后它们都指向更
 * 改后的新值 [1,2,3,4] 。
 */

/**
 * 由于引用指向的是值本身而非变量，所以一个引用无法更改另一个引用的指向。
 */
console.log('=========================')
var e = [1,2,3];
var f = e;
console.log(e); // [1,2,3]
console.log(f); // [1,2,3]
// 然后
f = [4,5,6];
console.log(e); // [1,2,3]
console.log(f); // [4,5,6]

e = [7,8,9]
console.log(e); // [7,8,9]
console.log(f); // [4,5,6]

/**
 * b=[4,5,6] 并不影响 a 指向值 [1,2,3] ，除非 b 不是指向数组的引用，而是指向 a 的指针，
 * 但在 JavaScript 中不存在这种情况！
 */