/**
 * @Author liming
 * @Date 2024/5/31 9:53
 **/

/**
 * JavaScript 有一个常规的 0 （也叫作
 * +0 ）和一个 -0 。在解释为什么会有 -0 之前，我们先来看看 JavaScript 是如何来处理它的。
 * -0 除了可以用作常量以外，也可以是某些数学运算的返回值。
 */
var a = 0 / -3; // -0
var b = 0 * -3; // -0
console.log(a)
console.log(b)

/**
 * 加法和减法运算不会得到负零（negative zero）。
 * 负零在开发调试控制台中通常显示为 -0 ，但在一些老版本的浏览器中仍然会显示为 0 。
 * 根据规范，对负零进行字符串化会返回 "0" ：
 */

/**
 * 抛开学术上的繁枝褥节不论，我们为什么需要负零呢？
 * 有些应用程序中的数据需要以级数形式来表示（比如动画帧的移动速度），数字的符号位
 * （sign）用来代表其他信息（比如移动的方向）。此时如果一个值为 0 的变量失去了它的符
 * 号位，它的方向信息就会丢失。所以保留 0 值的符号位可以防止这类情况发生。
 */