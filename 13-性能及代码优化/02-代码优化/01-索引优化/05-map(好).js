/**
 * @Author liming
 * @Date 2023/10/25 9:20
 **/

/**
 * ECMAScript 6 新增的“弱映射”（ WeakMap ）是一种新的集合类型，为这门语言带来了增强的键/
 * 值对存储机制。 WeakMap 是 Map 的“兄弟”类型，其 API 也是 Map 的子集。 WeakMap 中的“weak”（弱），
 * 描述的是 JavaScript 垃圾回收程序对待“弱映射”中键的方式。
 */

/**
 * 弱映射中的键只能是 Object 或者继承自 Object 的类型，尝试使用非对象设置键会抛出
 * TypeError 。值的类型没有限制。
 * 如果想在初始化时填充弱映射，则构造函数可以接收一个可迭代对象，其中需要包含键/值对数组。
 * 可迭代对象中的每个键/值都会按照迭代顺序插入新实例中
 */

/**
 * WeakMap 中“weak”表示弱映射的键是“弱弱地拿着”的。意思就是，这些键不属于正式的引用，
 * 不会阻止垃圾回收。但要注意的是，弱映射中值的引用可不是“弱弱地拿着”的。只要键存在，键/值
 * 对就会存在于映射中，并被当作对值的引用，因此就不会被当作垃圾回收。
 */
function previewWeek(i) {
    let weeksMap = new Map([
        [1, '一'],
        [2, '二'],
        [3, '三'],
        [4, '四'],
        [5, '五'],
        [6, '六'],
        [7, '日']
    ]);
    return weeksMap.get(i) ? '星期' + weeksMap.get(i) : ''
}
